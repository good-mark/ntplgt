

	 Поддержка графических моделей
	 

 
Читайте также:CASE моделей СF 80, 525, 527Анализ моделей и сценариевАнализ статистических балансовых моделейВиды информационных моделей (на примерах)Визуализация формальных моделей.Вопрос №38 Общие черты и различия соц-эк моделей развития ведущих стран ЕС. Германская, французская, итальянская и скандинавская модели.Вторая группа концепций и моделейГармонизация национальных моделей учета: российской, северо-американской (GAAP) и др.Глава 8. Обзор: поддержка работоспособности системыГрафические методы исследования моделей челюстей.Два подхода к построению моделейЗначение географических карт






 
 Графическая ориентация CASE заключается в том, что программы являются схематическими проектами и формами, которые много проще в использовании, чем многостраничные описания. Для представления программ применяются структурные диаграммы различных типов, дополнительное достоинство которых заключается в их использовании в качестве наглядной «двумерной» документации по проекту.
 Для CASE существенны 4 типа диаграмм: диаграммы функционального проектирования (для этих целей наиболее часто употребляются DFD – диаграммы потоков данных), диаграммы моделирования данных (как правило, ERD – диаграммы «сущность–связь»), диаграммы моделирования поведения (как правило, STD – диаграммы переходов состояний) и структурные диаграммы (карты), применяющиеся на этапе проектирования и описывающие отношения между модулями и внутри модульную структуру. Создание и модификация подобных диаграмм осуществляется с помощью специальных графических редакторов (диаграммеров), являющихся сервисными средствами на этапах анализа требований и проектирования спецификаций. Современные диаграммеры обеспечивают:
 – создание иерархически связанных диаграмм, в которых комбинируются графические и текстовые объекты;
 – создание и редактирование объектов в любом месте диаграммы;
 – создание, перемещение и выравнивание групп объектов, изменение их размеров, масштабирование;
 – сохранение связей между объектами при их перемещении и изменении размеров;
 – автоматический контроль ошибок и др.
 Реализация подобных возможностей позволяет пользователю целиком сосредоточится на собственно проектировании, не отвлекаясь на решение второстепенных вопросов, связанных с размещением элементов диаграмм, их компоновкой и т.п.
 Полученные диаграммы дают ясное понимание и решение проблемы, позволяют проанализировать функционирование создаваемого ПО, фиксируют связи между разработчиками, пользователями и руководителями, обеспечивают стандартизацию представления структуры программы и данных.
 Важность контроля ошибок на этапах анализа требований и проектирования спецификаций обуславливается возможностью их автоматического обнаружения на ранних этапах ЖЦ. CASE обеспечивает автоматическую верификацию и контроль проекта на полноту и состоятельность на ранних этапах ЖЦ, что влияет на успех разработки в целом. В подтверждение этого можно привести следующие статистические данные, основанные на отчетах фирмы TRW по анализу 5 крупных проектов [9]:

	
 – при традиционной организации работ ошибки проектирования и кодирования составляют, соответственно, 64% и 32% от общего числа ошибок;
 – ошибки проектирования в 100 раз труднее обнаружить на этапе сопровождения ПО, чем на этапах анализа требований и проектирования спецификаций.
 В CASE диаграммеры и верификаторы способны осуществлять следующие типы контроля:
 1 Контроль синтаксиса диаграмм и типов их элементов. Обычно такой контроль осуществляется при вводе и редактировании элементов диаграмм. Примеры контролируемых ситуаций:
 – по синтаксису: любой функциональный элемент диаграммы должен иметь по крайней мере один входной и один выходной поток; два элемента данных не могут быть непосредственно связаны;
 – по типам: функциональный элемент должен всегда использоваться для представления процедурной компоненты; поток данных всегда должен быть представлен компонентой данных.
 2 Контроль полноты и состоятельности диаграмм: все элементы диаграмм должны быть идентифицированы и отражены в репозитарии. Например, для DFD контролируются неименованные или несвязанные потоки данных, процессы и хранилища данных; источники и стоки данных (внешние сущности) вне контекстной диаграммы; хранилища данных на контекстной диаграмме и т.п. При анализе словаря данных необходимо выявлять циклические определения, эквивалентные определения, неопределенные объекты.
 3 Контроль декомпозиции функций включает оценку качества на основе различных метрик ПО и частичный семантический контроль.
 4 Сквозной контроль диаграмм одного или различных типов на предмет их состоятельности по уровням вертикальное и горизонтальное балансирование диаграмм. При вертикальном балансировании (диаграммы одного типа) выявляются несбалансированные потоки данных между детализируемой и детализирующей диаграммами. Горизонтальное балансирование определяет некорректности между DFD, ERD, STD, словарями данных и миниспецификациями процессов. Так при балансировании DFD–ERD контролируется соответствие каждого хранилища данных на DFD сущности или отношению на ERD. Контроль DFD–STD осуществляется по следующим правилам: каждый управляющий процесс на DFD детализируется спецификацией управления STD, и наоборот, каждой STD должен соответствовать управляющий процесс; каждое условие (действие) в STD должно соответствовать входному (выходному) управляющему потоку на DFD, и наоборот, каждому управляющему потоку в зависимости от его направленности должно соответствовать условие/действие на STD. При балансировании DFD–словарь данных–миниспецификация должны проверяться следующие правила:загрузка...
– каждый поток и хранилище данных должны быть определены в словаре данных (контроль неопределенных значений), и наоборот, каждое определение в словаре должно быть отражено на диаграмме, в миниспецификации или другом определении (контроль неиспользуемых значений);
 – каждый процесс на DFD должен детализироваться с помощью DFD или миниспецификации (но не тем и другим одновременно), и наоборот, каждая миниспецификация должна соответствовать единственному процессу;
 – ссылки к данным в миниспецификациях должны соответствовать объектам на диаграммах и в словаре данных;
 – по возможности должна контролироваться семантика миниспецификации: например, если входные и/или выходные потоки связаны с хранилищем данных, то это должно быть отражено в миниспецификации (операторами READ, GET, WRITE, PUT и т.п.).
  



Состав и структура и функциональные особенности CASE–инструментария  | 
Дата добавления: 2015-04-23; просмотров: 28; Опубликованный материал нарушает авторские права?.

Не нашли то, что искали? Воспользуйтесь поиском:
Не хотите "париться"? закажите платную работу!
	Лучшие изречения: Только сон приблежает студента к концу лекции. А чужой храп его отдаляет.  1598 -  | 1521 -  или читать все...
  