

	 Открытие и закрытие потока
	 

 
Читайте также:Аналитический способ вычисления потокаАналогия между радиоактивным распадом и ослаблением потока ионизирующего излученияВНД неординарного потокаВнешняя политика Токугава. «Закрытие» страныВступление в войну Османской империи и открытие азиатского театра военных действийГотика: открытие мира или трансцендентный спиритуализм?Для денежного потока от операционной деятельностиЗакрытие файлаЗначения интенсивности движения людского потокаИнтенсивность движения и уровень загрузки автомобильной дороги транспортными потокамиИнформационная система управления денежными потокамиКонтактно-механические методы определения параметров транспортного потока






Потоковый ввод-вывод
					
					
					
					
					
					Ввод-вывод в С
					
					
					
					Файл – это именованная область внешней памяти. Файл имеет следующие характерные особенности:
 1. имеет имя на диске, что дает возможность программам работать с несколькими файлами;
 2. длина файла ограничивается только емкостью диска.
 Особенностью С является отсутствие в этом языке структурированных файлов. Все файлы рассматриваются как не структурированная последовательность байтов. При таком подходе понятие файла распространяется и на различные устройства. Одни и те же функции используются как для обмена данными с файлами, так и для обмена с устройствами.
 Библиотека С поддерживает три уровня ввода-вывода:
 - потоковый ввод-вывод;
 - ввод-вывод нижнего уровня;
 - ввод-вывод для консоли портов (зависит от конкретной ОС).
 Рассмотрим потоковый ввод-вывод.На уровне потокового ввода-вывода обмен данными производится побайтно, т. е. за одно обращение к устройству (файлу) производится считывание или запись фиксированной порции данных (512 или 1024 байта). При вводе с диска или при считывании из файла данные помещаются в буфер ОС, а затем побайтно или порциями передаются программе пользователя. При выводе в файл данные также накапливаются в буфере, а при заполнении буфера записываются в виде единого блока на диск. Буферы ОС реализуются в виде участков основной памяти. Т .о. поток – это файл вместе с предоставленными средствами буферизации. Функции библиотеки С, поддерживающие обмен данными на уровне потока позволяют обрабатывать данные различных размеров и форматов. При работе с потоком можно:
 1. Открывать и закрывать потоки (при этом указатели на поток связываются с конкретными файлами);
 2. Вводить и выводить строки, символы, форматированные данные, порции данных произвольной длины;
 3. Управлять буферизацией потока и размером буфера;
 4. Получать и устанавливать указатель текущей позиции в файле.
 Прототипы функций ввода-вывода находятся в заголовочном файле <stdio.h>, который также содержит определения констант, типов и структур, необходимых для обмена с потоком.Прежде, чем начать работать с потоком, его надо инициировать, т. е. открыть. При этом поток связывается со структурой предопределенного типа FILE, определение которой находится в файле <stdio.h>. В структуре находится указатель на буфер, указатель на текущую позицию и т. п. При открытии потока возвращается указатель на поток, т. е. на объект типа FILE. Указатель на поток должен быть объявлен следующим образом:

 #include <stdio.h>
 . . . . . . . .
 FILE*f;//указатель на поток
 Указатель на поток приобретает значение в результате выполнения функции открытия потока:
 FILE* fopen(const char*filename,const char*mode);
 где const char*filename – строка, которая содержит имя файла, связанного с потоком,
 const char*mode – строка режимов открытия файла.
 Например:
 f=fopen(“t.txt”,”r”);
 где t.txt – имя файла, r – режим открытия файла.
 Файл связанный с потоком можно открыть в одном из 6 режимов
  Режим
   Описание режима открытия файла
   r
   Файл открывается для чтения, если файл не существует , то выдается ошибка при исполнении программы.
   w
   Файл открывается для записи, если файл не существует, то он будет создан, если файл уже существует, то вся информация из него стирается.
   a
   Файл открывается для добавления, если фай не существует, то он будет создан, если существует, то информация из него не стирается, можно выполнять запись в конец файла
   r+
   Файл открывается для чтения и записи, изменить размер файла нельзя, если файл не существует , то выдается ошибка при исполнении программы.
   w+
   Файл открывается для чтения и записи, если файл не существует, то он будет создан, если файл уже существует, то вся информация из него стирается.
   a+
   Файл открывается для чтения и записи, если фай не существует, то он будет создан, если существует, то информация из него не стирается, можно выполнять запись в конец файла
  Поток можно открывать в текстовом (t) или двоичном режиме(b). В текстовом режиме поток рассматривается как совокупность строк, в конце каждой строки находится управляющий символ ‘\n’. В двоичном режиме поток рассматривается как набор двоичной информации. Текстовый режим устанавливается по умолчанию.
 В файле stdio.h определена константа EOF, которая сообщает об окончании файла (отрицательное целое число).
 При открытии потока могут возникать следующие ошибки:
 - файл, связанный с потоком не найден (при чтении из файла);
 - диск заполнен (при записи);
 - диск защищен от записи (при записи) и т. п.
 В этих случаях указатель на поток приобретет значение NULL (0). Указатель на поток, отличный от аварийного не равен 0.

    
        Загрузка...
    
    

 Для вывода об ошибке при открытии потока используется стандартная библиотечная функция из файла <stdio.h>
 void perror (const char*s);
 Эта функция выводит строку символов, не которую указывает указатель s, за этой строкой размещается двоеточие пробел и сообщение об ошибке. Текст сообщения выбирается на основании номера ошибки. Номер ошибки заносится в переменную int errno(определена в заголовочном файле errno.h).
 После того как файл открыт, в него можно записывать информацию или считывать информацию, в зависимости от режима.
 Открытые файлы после окончания работы рекомендуется закрыть явно. Для этого используется функция:
 int fclose(FILE*f);
 Изменить режим работы с файлом можно только после закрытия файла.
 Пример:
 #include<stdio.h>
 #include<string.h>
 #include<stdlib.h>
 void main()
 {
 FILE *f;
 char filename[20];
 cout<<”\nEnter the name of file:”; cin>>filename;
 if(f=fopen(filename,”rb”)==0)//открываем для чтения в бинарном режиме и проверяем
 // возникает ли ошибка при открытии файла
 {
 perror(strcat“error in file :”,filename);//strcat складывает две строки
 exit(0);//выход из программы
 }
 . . . . .
 fclose(f);
 }
 Для текстового файла:
 if(f=fopen(filename,”rt”)==0)//открываем для чтения и проверяем возникает ли ошибка при //открытии файла
 if(f=fopen(filename,”r”)==0)//открываем для чтения и проверяем возникает ли ошибка при //открытии файла
  
  



Работа с двунаправленным списком  | следующая ==> Строковый ввод-вывод
Дата добавления: 2014-01-24; просмотров: 64; Опубликованный материал нарушает авторские права?.

Не нашли то, что искали? Воспользуйтесь поиском:
Не хотите "париться"? закажите платную работу!
	Лучшие изречения: Сдача сессии и защита диплома - страшная бессонница, которая потом кажется страшным сном.   1571 -  | 1485 -  или читать все...
   r
   Файл открывается для чтения, если файл не существует , то выдается ошибка при исполнении программы.
  