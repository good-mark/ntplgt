
          ﻿Международный Научный Институт "Educatio" I (8), 2015
107
ТЕХНИЧЕСКИЕ НАУКИ
I.	По адресным характеристикам данных формируются все данные, необходимые для построения набора P P P
1 ’ 2 ’''' ’ n , который и формируется на основе описанного выше алгоритма - все данные, необходимые для его построения, у МП имеются.
II.	На основе обратного преобразования из СОК в
C _ —
ПСС восстанавливаются блоки ‘, г' _ 1 r и формируется
C = C C C число C WW-r-M.
III.	Полученное число C переводится в символьную форму на основе преобразования, обратного использованному в пункте 1 в процессе оцифровывания текста. Например, если использовались ASCII-коды для оцифровывания, то для восстановления текста число C записывается в двоичной (восьмеричной или шестнадцатиричной) форме, и каждый блок из 8 битов заменяется на соответствующий ASCII-символ. Полученный набор символов и есть исходный текст.
В работе предлагается алгоритм закрытия данных, размещаемых в памяти (прежде всего, оперативной) в процессе обработки МП, что обесценивает эти данные для
злоумышленника, поскольку не позволяет воспользоваться ими даже при их хищении. Практическая реализация предложенной процедуры предполагает наличие микропроцессоров, поддерживающих режим работы процедуры.
Список литературы
1.	Магомедов Ш.Г. Использование системы остаточных классов для организации передачи данных морскими судами. Вестник Астраханского государственного технического университета. Серия: Морская техника и технология. - 2010. - №2. - С. 44-46.
2.	Червяков Н.И., Ряднов С.А., Сахнюк П.А., Шапошников А.В., Модулярные параллельные вычислительные структуры нейропроцессорных систем. -М.: ФИЗМАТЛИТ, 2003. - 288 с.
3.	Магомедов Ш.Г. Вариант архитектуры защищенного микропроцессора на основе системы остаточных классов. Прикаспийский журнал. Управление и высокие технологии. -2013. - №4. - С. 118-125.
МНОГОАГЕНТНЫЕ БАНКИ ЗНАНИЙ: АРХИТЕКТУРА, РАЗРАБОТКА И ПРИМЕНЕНИЕ
Зайцев Евгений Игоревич
к.т.н., доцент Московского государственного университета приборостроения и информатики, Россия, Москва
USING MULTI-AGENT SYSTEMS: ARCHITECTURE, DEVELOPMENT AND APPLICATION
Zaytsev Evgeny Igorevich, Candidate of Science, associate professor of Moscow State University of Instrument Engineering and Computer Science, Russia, Moscow АННОТАЦИЯ
Рассматриваются организация и разработка многоагентных банков знаний (МБЗ), а также их применение в образовательном процессе.
ABSTRACT
Issues concerning the organization, development and application of multi-agent knowledge banks (MAKB) in educational process are considered in this paper.
Ключевые слова: мультиагентные системы; многоагентный банк знаний; электронные образовательные ресурсы; открытая образовательная модульная мультимедиа система.
Keywords: multi-agent systems; multi-agent knowledge multimedia system.
Многоагентные системы (МАС, MAS-MultiAgent Systems) относятся к классу распределенных систем искусственного интеллекта, в которых вместо одного интеллектуального решателя для решения слабо структурированных и плохо формализуемых задач используется сеть программных агентов [1,2]. Агентно-ориентированный подход, подобно ориентированной на службы архитектуре SOA (Service-Oriented Architecture), предполагает разбиение приложений на крупно гранулированные, слабо связные компоненты, которые инкапсулируют больше функциональности, по сравнению с такими программными абстракциями, как процедуры или классы. Повышение уровня используемых абстракций упрощает разработку распределенных интеллектуальных систем, при этом оно ограничивает область действия абстракций и объем контроля деталей реализации, порученного разработчикам. Повторное использование абстракций высшего уровня сопряжено с трудностями. Чтобы быть многократно используемой, абстракция должна допускать адаптацию, как через некоторые внутренние механизмы изменчивости, так и через внешние адаптеры. Фундаментом
bank; electronic learning resource; open educational modular
для систематического повторного использования в настоящее время служат проблемно-ориентированные языки, определенные множеством классов и шаблонов.
Теория агентов и многоагентных систем предлагает такие высокоуровневые понятия как роли агентов, планы, цели, протоколы общения и ведения переговоров. В отличие от традиционных объектно-ориентированных программных серверов, имеющих развитые средства взаимодействия со средой и другими объектами, агенты способны действовать рационально и осуществлять логические выводы в условиях неполноты и противоречивости получаемой информации.
Выделяют такие свойства программных агентов, как интерактивность или общественное поведение (то есть способность агентов функционировать в сообществе, инициируя взаимодействия и обмениваясь сообщениями с помощью некоторого языка коммуникаций); реактивность (способность воспринимать окружающую среду и своевременно реагировать на события недетеминирован-ным образом); проактивность и целеустремленность (спо-
Международный Научный Институт "Educatio" I (8), 2015
108
ТЕХНИЧЕСКИЕ НАУКИ
собность действовать в упреждающей манере, в частности, генерировать новые цели и действовать рационально для их достижения).
Важным свойством агентов является мобильность, которая позволяет агентам мигрировать по сети в поисках необходимой информации или сервисов и динамически перераспределять вычислительную нагрузку в зависимости от состояния сети. Технология мобильных агентов может поддерживать как слабую (weak mobility), так и сильную (strong mobility) модели мобильности. Характерной чертой слабой мобильности является то, что перенесённый код всегда запускается из своего исходного состояния, как это происходит, например, с Java-апплетами (applets). В случае сильной мобильности вместе с сегментом кода переносится также сегмент исполнения, что позволяет работающему процессу после приостановки и перенесения на другую машину продолжить его выполнение с того места, на котором этот процесс был приостановлен. Примером агентов с сильной мобильностью являются Java-аглеты (aglets), которые пересылаются из одного контекста в другой по протоколу ATP (Agent Transfer Protocol) прикладного уровня, не зависящему от платформы и использующему унифицированный указатель ресурса (URL, Uniform Resource Locator) для определения местоположения агентов и серверов.
В определении агента, которое дает Фонд интеллектуальных физических агентов (Foundation for Intelligent Physical Agents), являющийся комитетом IEEE Computer Society (http://fipa.org), агент - это главный исполнитель в домене, обладающий одной или несколькими сервисными возможностями, образующими единую и комплексную модель выполнения, которая может включать доступ к внешнему программному обеспечению, пользователям и средствам связи. Отмечается, что главной отличительной чертой программных агентов являются их интеллектуальность (intelligent). С точки зрения объектно-ориентированного программирования это означает то, что агент содержит не только типичные для объектных классов методы и атрибуты (члены-данные класса), но также когнитивные структуры данных (CDS, Cognitive Data Structures) и методы, реализующие логические выводы, а также механизмы самообучения и адаптации.
Фонд FIPA унифицирует архитектуру платформ агентов и необходимые для управления агентами операции и способы взаимодействия агентов с программным обеспечением, которое не использует агентную технологию. Согласно FIPA система агентов содержит подсистему управления агентами (Agent Management System), службу каталога (Directory Facilitator), канал связи агентов (Agent Communication Channel) и менеджер безопасности платформы агентов (Agent Platform Security Manager). Данные компоненты включают сервисы по созданию, удалению, деактивации, возобновлению работы и миграции агентов, службы маршрутизации сообщений и управления жизненным циклом, службы белых страниц (с информацией о соответствии между глобально уникальными именами агентов и адресами локального транспорта, используемого платформой) и желтых страниц службы каталога (с описанием агентов и услуг, которые они предоставляют), а также сервисы по осуществлению политики безопасности на транспортном уровне.
Другой стандарт для реализации систем агентов и обеспечения интероперабельности между различными архитектурами - MASIF (Mobile Agent System Interoperability Facilities) ассоциации Object Management Group
(http://www.omg.org), который унифицирует синтаксис и правила выполнения операций, связанных с созданием, удалением, перемещением и идентификацией агентов, приостановкой и возобновлением их работы, получением агентом информации о типе платформы. Представляя собой надстройку над стандартом CORBA (Common Object Request Broker Architecture) стандарт MASIF позволяет объединить традиционную клиент-серверную парадигму и технологию мобильных агентов. MASIF поддерживает некоторые сервисы CORBA, но не требует обязательного их использования.
Для реализации многоагентных систем на основе спецификаций стандартов FIPA используют такие инструментальные средства, как JADE (Telecom Italia Lab), Agent Factory (PRISM Laboratory), FiPa-OS (Emorphia), JACK Intelligent Agents (AOS Group), Zeus (British Telecommunication), Agent Development Kit (Tryllian BV), April Agent Platform (Agent Research Group), Comtec Agent Platform (FIPA), Java Agent Services API, Grasshopper (IKV technologies AG).
Для реализации MAC на основе спецификаций стандарта MASIF используют такие среды, как Aglets SDK (IBM), Odyssey (GenMagic), D'Agents (Dartmouth college), Grasshopper (IKV++). Многие из этих систем позиционируются, как проекты с открытым исходным кодом (JADE, ZEUS, FIPA-OS, AgentFactory, Tryllian ADK).
Разраработка многоагентных систем возможна также с использованием универсальных интегрированных сред разработки (Integrated Development Environment -IDE), позволяющих подключать модули специального назначения. Например, такие IDE, как мультиплатформенные Eclipse (Eclipse Foundation) или NetBeans (NetBeans Community) позволяют реализовывать как прикладные предметно-ориентированные МАС, так и специализированные инструментальные средства их разработки. Поскольку Eclipse и NetBeans состоят из плагинов (PDE), у разработчиков инструментальных средств имеется возможность предложить свои расширения к этим IDE и предоставить пользователям последовательную и цельную интегрированную среду разработки. Создаваемая агентная платформа может непосредственно опираться на операционную систему, либо использовать промежуточное программное обеспечение, типа Java Virtual Machine (JVM) исполняющей системы Java Runtime Environment (JRE) или Common Language Runtime (CLR) программной платформыМТ Framework.
Высокий уровень абстракции, используемый при агентно-ориентированном подходе, поддерживаемый агентными кросс-платформенными технологиями, позволяет использовать концепцию программных агентов при разработке таких прикладных МАС, как многоагентные банки знаний (МБЗ) [3]. Многоагентные банки знаний представляют собой распределенные интеллектуальные информационные системы учебного назначения, которые интегрируют функции интеллектуальных учебных сред (ILE, Intelligent Learning Environments) и интеллектуальных обучающих систем (ITS, Intelligent Tutoring System). МБЗ включают общие и специальные знания о предметной области, о процессе обучения и модели обучаемого, ассоциируя их с реактивными и когнитивными программными агентами, которые реализуют процедуры обработки этих знаний, формируют и выдают ответы на запросы пользователей, осуществляют адаптивное обучение. Агенты МБЗ могут взаимодействовать с интерактивными образовательными модулями открытой образовательной модульной мультимедиа системы [4] и имеют доступ к
Международный Научный Институт "Educatio" I (8), 2015
109
ТЕХНИЧЕСКИЕ НАУКИ
хранилищам учебных и информационно-справочных электронных образовательных ресурсов.
В двухуровневой архитектуре многоагентного банка знаний модель реактивного агента может быть задана следующим образом:
AR=(ZR, WR, N(ZR,Net,SR), SR(R,A(G))), где ZR -множество входных сообщений; WR - множество выходных сообщений; N - множество методов, определяющих реакции нейронной сети Net реактивного агента на входные сообщения ZR; SR - множество состояний, каждое из которых определяется набором атрибутов агента и их значениями:
INT Ri = {...[Aj,DOM(Aj)],...}; EXT Ri = {F1,...Fp }; Fk={A1(G1),... As(Gn)}, где R - множество отношений, G - множество значений множества атрибутов A. Домены (DOM) являются общими совокупностями значений, из которых берутся реальные значения для атрибутов отношения. Интенсиональные части (INT) локальных баз данных содержат информацию, характеризующую семантику предметной области, экстенсиональные части (EXT) описывают возможные состояния агентов и их взаимосвязи. Одноуровневая многоагентная система, состоящая из самоорганизующихся реактивных агентов, не обладает центральным планом действий, имеет апостериори определяемые организационные структуры и формируется путём простой локальной адаптации. Адекватные реакции агентов на возможные в окружающей среде ситуации реализуются благодаря обучению нейронной сети Net, которая поддерживает механизм конкуренции между желаниями и позволяет при предъявлении агенту входного вектора (ситуации) возбуждать наиболее точно соответствующие ему действия.
В случае многоуровневой организации МБЗ помимо реактивных агентов, не имеющих целевой ориентации и связанных с набором источников знаний о предметной области, функционируют когнитивные агенты, которые планируют собственные действия и координируют деятельность реактивных агентов. Модель когнитивного агента формально может быть определена шестеркой: AK=(ZK,WK,SK,,SP,P), где ZK - множество входных сообщений; WK - множество выходных сообщений (осведомительных, управляющих, координационных); SK - множество состояний когнитивного агента, соответствующее множеству ситуаций, которые зависят от ментальных свойств агента (убеждений, намерений, желаний, выполняемых действий), состояний других агентов и их взаимосвязей, происходящих в системе событий; SP - система продукций, определяющая переходы агента из одного состояния в другое и формируемые при этом выходные сообщения, инициирующие синхронные либо асинхронные операции обмена; P=(D,SG,s0) - система планирования в пространстве состояний для проблемной области D c исходным состоянием s0 и динамическим множеством целей SG.
Отличительной особенностью когнитивных агентов является то, что в их модели присутствуют ментальные свойства (интенциональные характеристики), такие как убеждения, желания и намерения (модель BDI - Belief, Desires, Intentions - минимальное интенциональное описание агента), которые направляют деятельность агентов и могут меняться в процессе функционирования. В архитектуре BDI, которая во многом строится по аналогии с практическими рассуждениями человека, процесс принятия решений выполняется с использованием механизмов вывода на основе ментальных понятий агента, представленных некоторыми структурами знаний.
Не обладая полным знанием о внешнем окружении и имея лишь частичное представление о проблеме когнитивные агенты могут осуществлять неточные, правдоподобные рассуждения, которые необходимо подвергать пересмотру при получении агентом дополнительной информации, несовместимой с полученными ранее заключениями (belief revision), а также при изменении модели мира в результате обновления убеждений агентов (belief update). Убеждения агента становятся знаниями только при подтверждении (обосновании) новыми фактами или объяснениями. Знания программных агентов о моделируемых в их базах предметных областях могут быть представлены с помощью традиционной для систем искусственного интеллекта модели - с помощью специальных фреймов-прототипов, которые используются для описания объектов предметной области и их состояний, действий и событий.
Ответы на запросы пользователей формируются когнитивными агентами МБЗ в результате спецификации свойств сущностей (событий и их субъектов), вычисления каузальных, временных и других отношений на множестве сущностей, а также в результате планирования решения задач. При этом вычисление отношений и синтез плана действий для решения некоторой задачи происходят не только в процессе выполнения когнитивным агентом продукционных, редукционных или трансформационных правил, но также в процессе его переговоров с другими агентами. Адекватные реакции агентов на возможные в окружающей среде ситуации реализуются благодаря обучению искусственных нейронных сетей реактивных агентов, которые при предъявлении агентам входного вектора (ситуации) активизируют наиболее точно соответствующие ему действия.
В рамках учебных процессов применение многоагентных банков знаний позволяет специфицировать основные компоненты учебных дисциплин - лекции, практические занятия, лабораторные работы, используемые учебные материалы, и обеспечивает возможность организации эффективного доступа к распределенным учебным ресурсам. МБЗ становятся полноценным инструментом образовательной деятельности, который может использоваться для распределения учебных заданий и мониторинга их выполнения, личностно-ориентированного обучения с выбором наиболее подходящих для пользователя учебных материалов и интерактивных образовательных модулей, а также для реализации вопросно-ответных отношений.
Список литературы
1.	Зайцев Е.И. Об агентно-ориентированных системах и многоагентных банках знаний [Текст] / Е.И. Зайцев // Материалы VI Международной научно-практической конференции “Объектные системы -2012”. - Ростов-на-Дону, 2012. - С.50-56.
2.	Тарасов В.Б. От многоагентных систем к интеллектуальным организациям [Текст] / В.Б. Тарасов -М.: Эдиториал УРСС, 2002. -352с.
3.	Миронов А.С., Зайцев Е.И. О концепции многоагентных учебных сред, называемых многоагентными статическими банками знаний [Текст] / А.С Миронов, Е.И. Зайцев // Материалы XVII Международной конференции “Современное образование: содержание, технологии, качество”. В 2-х. т. -СПб.: Изд-во СПбГЭТУ “ЛЭТИ”, 2011. Т.2. С. 155 - 156.
4.	Осин А.В. Открытые образовательные модульные мультимедиа системы [Текст] / А.В. Осин - М.: Издательский сервис, 2010. -328 с.