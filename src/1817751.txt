
            ﻿0J20Í	0.055	0.053	Bíjjgo	0.010 ч
0.055	0.038	0.000	0.045	0.047 В
0.037 /	HL 0.065	0.047	0.067	0.034
0.060	0.028 Ч	0.000	0.019	0.065
0.6	0.055	,________________/А 0.050	J I 0.055	ВТ 0 025
Рис. 6. Эталонное изображение символа «8»
С учетом структуры штрихов начертания символов, для размера изображений символов порядка
10x15 пикселей оптимальным числом зон будет NxM,, где N=5 и M=5. При таком выборе зонного разрешения использованный способ нормирования вектора зонного описания позволяет обеспечить устойчивость данного метода распознавания к изменению толщины штрихов символа вследствие нестабильности яркостных характеристик изображения.
На рис. 6 показано эталонное изображение символа «8», разбиение на зоны и пиксельные веса каждой зоны.
Описанная выше, последовательность алгоритмов была использована при создании программы поиска и распознавания автомобильных номеров. Программа разработана в среде Delphi 7 и протестирована на 200 изображениях, вероятность распознавания автомобильного номера составила 85 %.
Работа выполнена при поддержке РФФИ, проект № 06-8-00751.
СПИСОК ЛИТЕРАТУРЫ
1.	Department of Electrical and Computer Web Pages. License Plate Recognition Final Report. Обращение к документу 19.08.2006. http://www.ece.cmu.edu/~ee551/Final_Reports/Gr18.551.S00.pdf
2.	Kim K.I., Kim K.K., Park S.H., Jung K., Park M.H., Kim H.J. VEGA VISION: A Vision System For Recognizing License Plates // IEEE Intern. Symp. on Consumer Electronics (ISCE 99). - 1999. -V. 2. - P. 176-181.
3.	Прэтт У. Цифровая обработка изображений. Пер. с англ. - М.: Мир, 1982. - Т. 1, 2.
4.	Gonzalez R.C., Woods R.E. Hough Transform Edge Linking // Digital Image Processing. - 2001. - № хх. - P. 569-577.
5.	Уоссермен Ф. Нейрокомпьютерная техника. - М.: Мир, 1992. - 184 с.
6.	M.V. Keldysh Institute for Applied Mathematics Russian Academy of Sciences Web Pages. Алгоритмическое обеспечение прототипа устройства считывания паспортов и виз. Обращение к документу 05.07.2006. http://www.keldysh.ru/papers/2003/prep46/ prep2003_46.html
УДК 004.932.4
БЫСТРЫЕ МОРФОЛОГИЧЕСКИЕ ПРЕОБРАЗОВАНИЯ ДЛЯ ЗАДАЧ КОРРЕКЦИИ И ПРЕОБРАЗОВАНИЯ БИНАРНЫХ ИЗОБРАЖЕНИЙ
А.В. Афонасенко
Томский государственный университет E-mail: Anuta8181@mail.ru
Представлены быстрые алгоритмы морфологических преобразований бинарных изображений. Отличительной особенностью представленных алгоритмов является исключение операций поиска минимального или максимального элемента внутри структурирующего элемента, что существенно повышает скорость реализации данных алгоритмов.
Использование методов морфологического анализа изображения для коррекции изображений, искаженных случайной некоррелированной помехой является одним из перспективных направлений в области анализа изображений [1-8]. Для оперативных систем обработки и анализа изображений важную роль играют их скоростные характеристики. Поэтому построение эффективных, быстрых алгоритмов морфологических преобразований изображения является актуальной задачей.
Пусть Я и 2представляют соответственно множества действительных и целых чисел, и пусть Е представляет й-мерное непрерывное пространство
Яй, (й=1,2,3,...,К) или дискретное пространство 2й. Тогда й-мерный сигнал можно представить как функцию области Яй (непрерывной) или 2й (дискретной), диапазон которой составляет либо Я -при непрерывном изменении амплитуды, либо 2 -при квантованном изменении амплитуды. Двоичные сигналы могут быть представлены с помощью множеств. Например, изображение в левой верхней части рис. 1 представляет двоичный сигнал, в котором область белого фона выражена через 0, а заштрихованная зона через 1. Ясно, что сигнал может быть также представлен множеством X точек, соответствующих заштрихованной зоне.
Двоичные изображения часто получают в результате пороговой селекции полутоновых изображений, и пороговая селекция часто используется для того, чтобы представить полутоновые изображения через двоичные сигналы, то есть с помощью множеств. Серра [1] использует представление действительной ¿-мерной функции fx), где x означает ¿-мерный вектор, с помощью ансамбля его ¿-мер-ных пороговых множеств, определяемых как
T СО = {x: f (x) > a, -да < a < да},
где амплитуда a полностью перекрывает R или Z, в зависимости от того, имеет ли сигнал f непрерывный или квантованный диапазон. Пороговые множества линейно упорядочены, поскольку a<b^~ Taf)^Tbf), и позволяют однозначно восстановить сигнал, так как
f (x) = max{a: x e Ta (f)}, Vx.	(1)
Сигналы f(x) несут ту же информацию, что и пороговые множества Ta(x). Следовательно,fx) может быть восстановлено по ансамблю fa(x), поскольку
f( x) = max{a: fa = 1}, Vx.
Размыкание	Замыкание
Рис. 1. Эрозия, наращение, размыкание и замыкание множества точекX с помощью структурирующего элемента В. Штриховые области соответствуют внутренности множеств, сплошная черная линия обозначает границы преобразуемых множеств, а пунктирная линия -границу исходного множества точек X
Фундаментальными морфологическими операторами для множеств являются наращение © и эрозия О с помощью В, В - структурирующий элемент, представляющий собой компактное множе-
ство малого размера и простой формы. Операция наращения всех пороговых множеств функции / с помощью одного и того же компактного множества дает множества, Та(/)©В, которые являются пороговыми множествами новой функции /©В, называемой наращением функции / с помощью В. Эта новая функция может быть вычислена либо из (1) как (/©В)(х)=шах{я:ха Та(/)©В}, или из прямой эквивалентной формулы
(/ © В)(х) = тах{/(х- у)}.
уаВ
Подобно этому операция эрозии всех пороговых множеств функции /с помощью одного и того же множества В и суперпозиции всех выходных множеств посредством (1) дает новую функцию, называемую эрозией функции /с помощью множества В, которая может быть вычислена по эквивалентной формуле
(/ О В)( х) = тш{ / (х + у)}.
уаВ
Другие операторы могут быть определены как комбинации эрозии и наращения. Например, два дополнительных фундаментальных оператора -размыкание 0 и замыкание •/с помощью В определяются как
/ о В = (/ О В) © В, / • В = (/ © В)О В.
Для иллюстрации геометрического поведения этих операторов полезно рассмотреть такие двумерные множества, как множество и структурирующий элемент В, показанные в верхней части рис. 1. Этот рисунок иллюстрирует, что центр структурирующего элемента располагается на границе преобразуемого множества; эрозия приводит к уменьшению множества X, а наращение - к его увеличению. Размыкание подавляет острые выступы и прорезает узкие перешейки в X, тогда как замыкание заполнят узкие заливы и малые отверстия, и таким образом ХОВсХсХ*В. Следовательно, если структурирующий элемент В имеет регулярную форму, размыкание и замыкание можно рассматривать как нелинейную фильтрацию, которая сглаживает контуры входного сигнала. Ясно, что форма и размер структурирующего элемента определяют природу и степень сглаживания.
Таким образом, алгоритм реализации морфологических операций для полутонового изображения заключается в следующем. Создается массив, такого же типа как изображение, который имеет такие же размеры как исходное изображение. В него записывается результат морфологической операции. Выбирается окно размером структурирующего элемента. Окно перемещается попиксельно по всему изображению и для точки оказавшейся в центре окна выбирается минимальное или максимальное (в зависимости от выполняемой операции, эрозия или наращение) значение из значений пикселей находящихся в пределах окна и это значение записывается в массив.
В реальных технических системах, в которых решаются такие задачи как, идентификация номерных знаков автомобилей, распознавание текста, анализ текстуры ткани и топологии печатных плат, возникает необходимость в обработке бинарных изображений. В подобных системах требуется высокая точность и скорость реализации алгоритмов при минимальных затратах памяти. Традиционные методы морфологических преобразований в данном случае являются не эффективными.
Так как бинарные изображения представлены только двумя градациями яркости, например, 0 и 1, то выбор минимального или максимального элемента, в пределах окна структурирующего элемента, для каждой точки изображения является неэффективным. В этой связи нами предлагается модификация алгоритма выполнения базовых морфологических операций, эрозии и наращения. Полагаем, что форме принадлежат точки с интенсивностью 1. Структурирующий элемент выбираем размером ЬхЬ (структурирующий элемент может быть выбран любой формы, в данном случае для упрощения рассмотрения он выбран в форме квадрата), х и у — координаты точки сканирования, Их — ширина изображения, /(х,у) - значение интенсивности в точке (х,у), Иу — высота изображения. Алгоритм имеет следующие шаги:
1.	создается массив, такого же типа как изображение, размером ЫххЫу, в котором будет содержаться результат операции;
2.	координатам х и у присваиваем по значению Ь/2;
3.	вычисляем значение /(х,у);
4.	если /(х,у)=1, тогда вычисляем по очереди значение интенсивностей следующих точек: (х— 1,у), (х—1,у—1), (х,у—1), (х+1,у— 1), (х+1,у), (х+1,у+1), (х,у+1), (х—1,у+1);
5.	если /(х,у)=0, то идем на шаг 7;
6.	если одно из значений интенсивностей, вычисленных на шаге 4, равняется 0, то центр окна ЬхЬ располагается в точке (х,у) и всем точкам в массиве, попадающим в это окно, если это операция эрозия присваивается значение 0, или, если это операция наращения 1;
7.	точке (х,у) в массиве присваиваем значение 0;
8.	если х<Их—Ь/2 и у<Иу—Ь/2, тогда выполняем х=х+1 и идем на шаг 2;
9.	если х=Их—Ь/2 и у<Иу—Ь/2, тогда выполняем х=Ь/2, у=у+1 и идем на шаг 2;
10.	конец алгоритма.
Оценка скорости реализации алгоритма показывает, что количество операций присвоения точке значения интенсивности будет пропорционально лишь количеству точек в форме умноженное на размер структурирующего элемента. Отличительной особенностью алгоритма является тот факт, что в нем исключены операции поиска минимального или максимального элемента внутри структурирующего элемента.
Далее приводится описание модификации алгоритма реализации морфологических операций размыкания и замыкания для бинарных изображений. Так, как смысл морфологически операций размыкания и замыкания заключается в том, что размыкание подавляет острые выступы и прорезает узкие перешейки в X (рис. 1), а замыкание заполняет узкие заливы и малые отверстия, то предлагается следующая модификация алгоритма выполнения операций размыкания и замыкания для бинарных изображений. Рассмотрим алгоритм реализации операции замыкания по шагам (для операции размыкания выполняется то же самое, что и для замыкания, только вместо нуля единица, а вместо единицы ноль).
Выбираем те же обозначения, что и для базовых морфологических операций, к-счетчик.
1.	Координатам х и у присваиваем по значению 0, к=0;
2.	вычисляем значение /(х,у);
3.	если /(х,у)=1, идем на шаг 9;
4.	если /(х,у)=0, вычисляем /(х+1,у);
5.	если /(х+1,у)=0, выполняем к=к+1, х=х+1 и вычисляем значение /(х,у) до тех пор, пока /(х,у) не станет равным 1 или пока х не станет равным Их;
6.	если х=Их, тогда к=0 и идем на шаг 10;
7.	если /(х,у)=1 и к<=Ь, тогда всем точкам от (х—к,у) до (х,у) присваиваем значение 1;
8.	к=0;
9.	если х<Их и у<Иу, х=х+1 и идем на шаг 2;
10.	если х=Их и у<Иу, х=0, у=у+1 и идем на шаг 2;
11.	координатам х и у присваиваем по значению 0, к=0;
12.	вычисляем значение /(х,у);
13.	если /(х,у)=0, идем на шаг 19;
14.	если /(х,у)=1, вычисляем /(х,у+1);
15.	если /(х,у+1)=0, выполняем к=к+1, у=у+1, и вычисляем /(х,у) до тех пор, пока /(х,у) не станет равным 1 или пока у не станет равным Иу;
16.	если у=Иу, тогда к=0 и идем на шаг 20;
17.	если /(х,у)=1 и к<=Ь, тогда всем точкам от (х,у—к) до (х,у) присваиваем значение 1;
18.	к=0;
19.	если у<Иу и х<Их, у=у+1 и идем на шаг 12;
20.	если у=Иу и х<Их, х=0, х=х+1 и идем на шаг 12;
21.	конец алгоритма.
Оценка скорости реализации алгоритма показывает, что количество операций присвоения точке значения интенсивности будет пропорционально лишь количеству точек одинаковой интенсивности располагающихся в промежутке, размером равным или меньшем, чем размер структурирующего элемента, между точками другой интенсивности. Отличительной особенностью алгоритма является тот факт, что в нем исключены операции поиска мини-
i
Ф"
far
о535сс1Ш^
—
>1 L а и
ннивт
Рис. 2. Применение быстрых алгоритмов операций замыкания и размыкания: а) исходный сигнал, 6) замыкание структурирующим элементом 5х 1, в, г) размыкание структурирующим элементом 1x3 и 15х 1
мального или максимального элемента внутри структурирующего элемента. А также исключена повторная замена точек форм, которая бы осуществлялась при поочередном использовании модифицированных операций эрозии и наращения.
Описанные выше быстрые алгоритмы операций замыкания и размыкания применяются для предварительной обработки изображений автомобиля, в задаче обнаружения номерной пластины. На рис. 2 представлено последовательное применение набора морфологических операций к бинаризованному изображению. На рис. 2, б, представлен результат применения операции замыкание структурирующим элементом размером 5x1. Размер структурирующего элемента равняется расстоянию между буквами на номерном знаке автомобиля, т. е. размеры номерной пластины должны быть заранее известны.
Результат для наглядности представлен черным и серым цветом, т. е. точки с интенсивностью 0 и 150 принадлежат одной форме.
На рис. 2, в представлен результат операции размыкания, примененной к изображению рис. 2, б, размер структурирующего элемента выбран раз-
мером меньшим, чем высота букв 1x3. На рис. 2, г - результат операции размыкания, примененной к изображению рис. 2, в, размер структурирующего элемента выбран размером меньшим, чем длина номерной пластины 15x1.
Данный метод, обладает следующими недостатками. Это проблема выбора порога бинаризации. Данную проблему, возможно, решить с помощью алгоритмов адаптивной бинаризации. Второй недостаток связан с трудностью определения размеров структурирующего элемента, т. к. он связан с размерами символов.
Программа была разработана и реализована в визуальной среде программирования Delphi7. Во время проведения испытаний, на компьютере с конфигурацией AMD Athlon 2,1 ГГц и оперативной памятью объемом 256 Мб, для изображения размером 1024x768 время исполнения составило 20 мс. Время реализации морфологических операций традиционным путем составило 900 мс.
Отличительной особенностью предложенных алгоритмов является исключение операции поиска минимального или максимального элемента внутри структурирующего элемента, что существенно
уменьшает время реализации данных алгоритмов для бинарных изображений. Для операций замыкания и размыкания исключена повторная замена точек форм, которая бы осуществлялась при по-
очередном использовании модифицированных операций эрозии и наращения.
Работа выполнена при поддержке РФФИ, проект № 06-8-00751.
СПИСОК ЛИТЕРАТУРЫ
1.	Маргос П., Серра Дж. Морфологические системы для обработки многомерных сигналов // Труды института инженеров по электротехнике и радиоэлектронике. - 1990. - Т. 78. - № 4. - С. 109-132.
2.	Пытьев Ю.П. Морфологический анализ изображений // Доклады АН СССР. - 1983. - Т. 269. - № 5. - С. 1061-1064.
3.	Пытьев Ю.П. Задачи морфологического анализа изображений // Математические методы исследования природных ресурсов Земли из космоса / Под ред. В.Г. Золотухина. - М.: Наука, 1984. - С. 41-83.
4.	Абламейко С.В., Лагуновский Д.М. Обработка изображений. -Минск: Амалфея, 2000. - 304 с.
5.	Chen. T. A pseudo top-hat mathematical morphological approach to edge detection in dark regions // Pattern Recognition. - 2002. -V. 35. - № 1. - P. 199-210.
6.	Sossa-Azuela J.H. Computing geometric moments using morphological erosions // Pattern Recognition. - 2001. - V. 34. - № 2. -P. 271-276.
7.	Laganiere R. A morphological operator for corner detection // Pattern Recognition. - 1998. - V. 31. - № 11. - P. 1643-1652.
8.	Pring Z. Document filters using morphological and geometrical features of characters // Image and Vision Computing. - 2001. - V. 19. - № 12. - P. 847-855.
УДК 004.056
ФОРМАЛИЗАЦИЯ МОДЕЛИ СОВЕРШЕНИЯ КИБЕРПРЕСТУПЛЕНИЙ, СОВЕРШАЕМЫХ С ИСПОЛЬЗОВАНИЕМ ВРЕДОНОСНЫХ КОДОВ
И.В. Давыдов, А.А. Шелупанов
Томский государственный университет систем управления и радиоэлектроники E-mail: davidoffi@mail.ru, saa@keva.tusur.ru
Рассмотрена модель совершения киберпреступлений, совершаемых с использованием вредоносных кодов. Проведена формализация предложенной модели, а также возможные меры противодействия на этапах совершения киберпреступления. Выделены аспекты исследования информационных следов этих преступлений на этапах расследования.
Настоящее время - эпоха информационного общества, в котором компьютерные и телекоммуникационные системы охватывают все сферы жизнедеятельности человека и государства - от решения проблем национальной безопасности, здравоохранения и управления транспортом до простого межличностного общения. Не секрет, что все эти системы хранят в себе информацию, которая порой бесценна. Не секрет и то, что в мире обязательно найдутся люди, которых эта информация так или иначе компрометирует, и они готовы пойти на многое, чтобы получить эту информацию или уничтожить ее.
Добиться поставленных целей возможно, если только пойти по двум сценариям: агентурным методом либо получить несанкционированный доступ к охраняемой информации программными средствами и осуществить задуманное. В случае агентурного метода эта процедура наверняка привлечет к себе внимание правоохранительных органов и спецслужб. В случае получения несанкционированного доступа программными средствами это будет практически незаметно, и, что особенно важно, на реализацию этого способа не потребуются значительные денежные вложения. Именно по
этим причинам получение несанкционированного доступа к охраняемой информации программными средствами в мире особо популярно [1, 2].
В большинстве случаев получение несанкционированного доступа достигается при помощи вредоносных кодов, реализованных на несовершенстве систем защиты программного обеспечения. В этом случае цели достигаются не при помощи общеизвестных и детектируемых вредоносных кодов, именуемых в хакерской среде как «Public», а при помощи специализированных и настроенных под строго определенные условия, не детектируемых ни одним антивирусным пакетом, вредоносных кодов, именуемых в хакерской среде как «Private». Стоимость таких «приватных» кодов исчисляется от 0,1 до нескольких сотен млн р. [3].
Особенностью киберпреступлений этого типа является то, что они совершаются по одной модели, содержащей четко выделяемые стадии: рекогносцировка (поверхностное изучение), сканирование (подробное изучение), составление карты (полное изучение), получение доступа к системе, расширение полномочий, «зомбирование» системы, кража информации и уничтожение следов. Схематично данная модель представлена на рис. 1.