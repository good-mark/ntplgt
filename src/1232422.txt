
 

 

 
 

 

 


 Hibernate (библиотека)

 
 Материал из Википедии — свободной энциклопедии

 Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии, проверенной 7 июня 2014; проверки требуют 18 правок.


Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии, проверенной 7 июня 2014; проверки требуют 18 правок.







 
 Перейти к: навигация, поиск У этого термина существуют и другие значения, см.
Hibernate.

Hibernate Тип Object-Relational Mapping


 Разработчик Red Hat


 Написана на Java


 Аппаратная платформа Java Virtual Machine


 Последняя версия 4.3.10 Final (15 мая 2015 года)


 Тестовая версия ORM 5.0.0.CR1[1] (28 мая 2015 года)


 Лицензия GNU Lesser General Public License


 Сайт hibernate.org




Hibernate — библиотека для языка программирования Java, предназначенная для решения задач объектно-реляционного отображения (object-relational mapping — ORM).
Она представляет собой свободное программное обеспечение с открытым исходным кодом (open source), распространяемое на условиях GNU Lesser General Public License.
Данная библиотека предоставляет легкий в использовании каркас (фреймворк) для отображения объектно-ориентированной модели данных в традиционные реляционные базы данных.





Содержание



 1 Основные возможности 2 Mapping 3 Персистентность 4 Язык запросов Hibernate (HQL) 5 Интеграция 6 Компоненты 7 История 8 Литература 9 Аналоги на других платформах 10 См. также 11 Примечания 12 Ссылки






Основные возможности[править | править вики-текст]

Целью Hibernate является освобождение разработчика от значительного объёма сравнительно низкоуровневого программирования по обеспечению хранения объектов в реляционной базе данных.
Разработчик может использовать Hibernate как в процессе проектирования системы классов и таблиц «с нуля», так и для работы с уже существующей базой данных.

Hibernate не только решает задачу связи классов Java с таблицами базы данных (и типов данных Java с типами данных SQL), но и также предоставляет средства для автоматической генерации и обновления набора таблиц, построения запросов и обработки полученных данных и может значительно уменьшить время разработки, которое обычно тратится на ручное написание SQL- и JDBC-кода.
Hibernate автоматизирует генерацию SQL-запросов и освобождает разработчика от ручной обработки результирующего набора данных и преобразования объектов, максимально облегчая перенос (портирование) приложения на любые базы данных SQL.

Hibernate обеспечивает прозрачную поддержку сохранности данных (persistence) для «POJO» (то есть для стандартных Java-объектов); единственное строгое требование для сохраняемого класса — наличие конструктора по умолчанию (без параметров).
Для корректного поведения в некоторых приложениях требуется также уделить внимание методам equals() и hashCode()[2].

Mapping[править | править вики-текст]

Mapping (сопоставление, проецирование) Java-классов с таблицами БД осуществляется с помощью конфигурационных XML-файлов или Java-аннотаций.
При использовании файла XML Hibernate может генерировать скелет исходного кода для классов длительного хранения (persistent).
В этом нет необходимости, если используется аннотация.
Hibernate может использовать файл XML или аннотации для поддержки схемы базы данных.

Обеспечиваются возможности по организации отношения между классами «один-ко-многим» и «многие-ко-многим».
В дополнение к управлению связями между объектами Hibernate также может управлять рефлексивными отношениями, где объект имеет связь «один-ко-многим» с другими экземплярами своего собственного типа данных.

Hibernate поддерживает отображение пользовательских типов значений.
Это делает возможными такие сценарии:

 Переопределение типа по умолчанию SQL, Hibernate выбирает при отображении столбца свойства.
 Проецирование перечисляемого типа Java на поле БД, будто они являются обычными свойствами.
 Проецирование одного свойства в несколько колонок.


Персистентность[править | править вики-текст]

Коллекции объектов данных, как правило, хранятся в виде коллекций Java-объектов, таких, как набор (Set) и список (List).
Поддерживаются обобщенные классы (Generics), введеные в Java 5.
Hibernate может быть настроен на «ленивые» (отложенные) загрузки коллекций.
Отложенные загрузки является вариантом по умолчанию, начиная с Hibernate 3.

Связанные объекты могут быть настроены на каскадные операции.
Например, родительский класс, Album (музыкальный альбом), может быть настроен на каскадное сохранение и/или удаление своего потомка Track.
Это может сократить время разработки и обеспечить целостность.
Функция проверки изменения данных (dirty checking) позволяет избежать ненужной записи действий в базу данных, выполняя SQL-обновление только при изменении полей персистентных объектов.

Успех библиотеки Hibernate подтолкнул JCP к разработке спецификации JDO, ставшей одной из стандартных технологий ORM на платформе JavaEE.
Также Hibernate совместима с JSR-220/317 и предоставляет стандартные средства JPA.

Язык запросов Hibernate (HQL)[править | править вики-текст]

Hibernate обеспечивает использование SQL-подобного языка Hibernate Query Language (HQL), который позволяет выполнять SQL-подобные запросы, записанные рядом с объектами данных Hibernate.
Запросы критериев предоставляются как Объектно-ориентированная альтернатива к HQL.

Интеграция[править | править вики-текст]

Hibernate может использоваться как в самостоятельных приложениях Java, так и в программах Java EE, выполняемых на сервере (например, сервлет или компоненты EJB).
Также он может включаться как дополнительная возможность к другим языкам программирования.
Например, Adobe интегрировал Hibernate в девятую версию ColdFusion (запускаемый на серверах с поддержкой приложений J2EE) с уровнем абстракции новых функций и синтаксиса, приложенных к CFML.

Компоненты[править | править вики-текст]

 Hibernate ORM (до версии 4.1 называлось Hibernate Core[3]) — ядро Hibernate, собственный API, xml-мэппинг (отображение) метаданных объектов (поддержка метаданных в виде аннотаций с версии 3.6)[4] Hibernate Annotations (с версии 3.6 объединены с Hibernate Core/ORM) — отображение (мэппинг) с помощью аннотаций JDK 5.0, как стандартных для JPA, так и собственных расширений[5] Hibernate EntityManager — реализация Java Persistence API для Java SE и Java EE[6] Hibernate Envers — аудит persistent-классов[7] Hibernate OGM — Object/Grid Mapper — расширение для хранения данных в хранилище NoSQL[8] Hibernate Shards — фреймворк для шардинга (разновидность горизонтального масштабирования, то есть разбиения баз данных на разделы по некоторому признаку)[9] Hibernate Validator — аннотации и API для проверки верности и целостности данных Hibernate Search — интеграция Hibernate с поисковой системой Lucene, с целью индексирования и поиска данных Hibernate Tools — средства разработки для Eclipse и Ant Hibernate Metamodel Generator — обработчик аннотаций, создающий классы статической метамодели JSR 317 Java Persistence API (JPA 2), используя при этом JSR 269 Pluggable Annotation Processing API[10]


История[править | править вики-текст]

 Июль 2002 — версия 1.0 Июнь 2003 — версия 2.0 31 марта 2005 — версия 3.0 16 октября 2006 — Hibernate Core, Annotations, Entity Manager 3.2.0.GA — поддержка JPA В декабре 2013 выпущен Hibernate ORM 4.3.0.
Ведутся работы над 5.0.


Литература[править | править вики-текст]

 Elliott, James.
Hibernate: A Developer's Notebook.
— 1st ed.
— O'Reilly Media, 2004, May 10.
— 190 p.
— ISBN 0-596-00696-9, ISBN 978-0-596-55653-2 (e-book), ISBN 0-596-55653-5 (e-book).


 
 Одна из первых книг по Hibernate, написанная опытным разработчиком из Singlewire Software, работавшим с объектно-ориентированными технологиями задолго до того, как это стало популярным[11].





 Bauer, Christian, King, Gavin.
Hibernate In Action.
— 1st ed.
— Greenwich: Manning Publications, 2004, August 1.
— 408 p.
— (In Action).
— ISBN 1-932394-15-X, ISBN 978-1-932394-15-3.


 
 Christian Bauer — участник команды разработки Hibernate, Gavin King — основатель проекта Hibernate, участник экспертной группы EJB 3.0 (JSR 220), руководитель в разработке стандарта Web Beans JSR 299, включающего концепции Hibernate, JSF и EJB 3.0.
Книга описывает устаревшую версию Hibernate 2.x.
Считается одной из лучших по отзывам критиков[12]





 Bauer, Christian, King, Gavin.
Java Persistence with Hibernate / Foreword by Linda DeMichiel.
— 1st ed.
— Greenwich: Manning Publications, 2006, November 24.
— 904 p.
— ISBN 1-932394-88-5, ISBN 978-1-932394-88-7.


 
 Фактически это обновлённая и пересмотренная версия книги «Hibernate in Action», здесь описывается Hibernate 3.x и JPA.
Второе издание этой книги, описывающее Hibernate 5, запланировано к выходу в начале 2015 г.
(отдельные главы выложены в электронном виде с марта 2013)[13]





 Linwood, Jeff, Minter, Dave.
Beginning Hibernate: From Novice to Professional.
— 3rd ed.
— Apress, 2006, August 25.
— 360 p.
— ISBN 1-59059-693-5.


 Linwood, Jeff, Minter, Dave.
Beginning Hibernate.
— 2nd ed.
— Apress, 2010, May 28.
— 400 p.
— ISBN 1-4302-2850-4.


 Elliott, James, O'Brien, Timothy M., Fowler, Ryan.
Harnessing Hibernate.
— 1st ed.
— O'Reilly Media, 2008, April 22.
— 382 p.
— ISBN 978-0-596-51772-4, ISBN 0-596-51772-6, ISBN 978-0-596-15948-1 (e-book), ISBN 0-596-15948-X (e-book).


 Bernard, Emmanuel, Griffin, John.
Hibernate Search in Action.
— 1st ed.
— Manning Publications, 2008, December 30.
— 488 p.
— (In Action).
— ISBN 1-933988-64-9.





Аналоги на других платформах[править | править вики-текст]

 NHibernate — аналогичное решение для платформы .NET


См. также[править | править вики-текст]




Имеется викиучебник по теме

«Java Persistence (англ.)»

 Сериализация Enterprise JavaBeans 3.0 NHibernate — порт Hibernate на платформу .NET MyBatis iBATIS JPA EclipseLink


Примечания[править | править вики-текст]


 ↑ Hibernate ORM 5.0.0.CR1 ↑ Рекомендации по использованию методов equals() и hashCode() в Hibernate (англ.)(недоступная ссылка — история).
Проверено 20 августа 2009.
Архивировано из первоисточника 6 декабря 2003.
 ↑ О причине смены названия Hibernate Core -> Hibernate ORM ↑ HIBERNATE - Relational Persistence for Idiomatic Java.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ Hibernate Annotations.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ Hibernate EntityManager.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ Hibernate Envers – Easy Entity Auditing.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ Hibernate OGM.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ Гловер, Эндрю.
Java development 2.0: Вторая волна разработки Java-приложений: Шардинг средствами Hibernate Shards (27 февраля 2012).
Архивировано из первоисточника 19 июля 2013.
 ↑ Hibernate Metamodel Generator.
 JBoss Community.
Архивировано из первоисточника 17 февраля 2012.
 ↑ James Elliott at O’Reilly ↑ Hibernate In Action on Amazon ↑ Java Persistence with Hibernate, Second Edition.
Christian Bauer, Gavin King, and Gary Gregory




Ссылки[править | править вики-текст]

 Официальный сайт Hibernate (англ.)
 Статья «Справочная Документация по Hibernate» (рус.)


 Java Persistence API Cayenne · DataNucleus · EasyBeans · EclipseLink · Hibernate · TopLink · OpenEJB · OpenJPA


 Java Платформы Java Card • Java ME • Java SE • Java EE



 
 Технологии Sun Java • Java Development Kit • OpenJDK • WTK • Java Virtual Machine • JavaFX • JAXP • Squawk




 Основные сторонние технологии GNU Classpath • GNU компилятор для Java • Kaffe • TopLink • Apache Harmony • Apache Struts • Spring Framework • Dalvik • Hibernate • JBoss • Processing • Dozer • AspectJ




 История История версий Java • Критика Java • Java Community Process • Sun Microsystems • Свободные реализации Java




 Свойства языка Байткод • Синтаксис • Модель памяти • Апплеты • Сервлеты • Мидлеты • JavaServer Pages • Web Start • Enterprise JavaBeans




 Скриптовые языки Java Tcl • Jython • JRuby • BeanShell • Groovy • Judoscript • Sleep • Bean Scripting Framework • Yoix • Rhino




 Конференции Java JavaOne • Joker • JPoint















 
 Источник — «https://ru.wikipedia.org/w/index.php?title=Hibernate_(библиотека)&oldid=72322045» Категории: Программное обеспечение по алфавиту Интерфейсы доступа к данным Java Enterprise Edition Библиотеки Java


Скрытые категории: Википедия:Статьи с нерабочими ссылками Википедия:Статьи с переопределением значения из Викиданных Википедия:Статьи о программах без скриншотов



 

 

 

 
 Навигация


 
 
 Персональные инструменты

 Вы не представились системе Обсуждение Вклад Создать учётную запись Войти


 

 
 
 Пространства имён

 Статья Обсуждение


 

 
 
 Варианты Просмотры

 Читать Текущая версия Править Править вики-текст История


 

 
 Ещё


 
 

 

 

 
 
 Поиск Навигация


 
 Заглавная страница Рубрикация Указатель А — Я Избранные статьи Случайная статья Текущие события


 

 

 
 Участие


 
 Сообщить об ошибке Портал сообщества Форум Свежие правки Новые страницы Справка Пожертвования


 

 

 
 Инструменты


 
 Ссылки сюда Связанные правки Спецстраницы Постоянная ссылка Сведения о странице Элемент Викиданных Цитировать страницу


 

 

 
 Печать/экспорт


 
 Создать книгу Скачать как PDF Версия для печати


 

 

 
 На других языках


 
 العربية Català Čeština Deutsch Ελληνικά English Español Eesti فارسی Français עברית Magyar Italiano 日本語 Қазақша Монгол Nederlands Polski Português Türkçe Українська 中文 Править ссылки Последнее изменение этой страницы: 21:50, 23 июля 2015.
 Текст доступен по лицензии Creative Commons Attribution-ShareAlike; в отдельных случаях могут действовать дополнительные условия.
Подробнее см.
Условия использования.

Wikipedia® — зарегистрированный товарный знак некоммерческой организации Wikimedia Foundation, Inc.

 Свяжитесь с нами


 Политика конфиденциальности Описание Википедии Отказ от ответственности Разработчики Мобильная версия



 
 
 
 


 

 

 
