
            ﻿М. А. Кузнецов
МАШИННОЕ ПРЕДСТАВЛЕНИЕ ИЕРАРХИЧЕСКИХ СТРУКТУР
НА ОСНОВЕ XML И DOM
Волгоградский государственный технический университет
Для начальных стадий проектирования и аналитического планирования точные математические модели построить невозможно. Предметная область недостаточно формализована. Это происходит из-за того, что решаемые задачи чаще всего строятся на стыке различных физических, экономических и социальных моделей или даже в новой предметной области. Условия задачи не определены точно [1]. Приходится применять мысленное моделирование. Но если лицо, принимающее решение (ЛПР), может сравнить альтернативы по отдельным критериям напрямую с помощью специальных шкал достаточно точно, то сведение его экспертных оценок в единую оценку полезности вызывает проблемы. Необходимо привлечение математических сверток. Соединение мысленного моделирования эксперта и сверток его оценок создает многокритериальную модель принятия решения. Метод анализа иерархий (МАИ) позволяет вывести задачу принятия решения на новый уровень [4].
МАИ вычисляет веса не только альтернатив, но и критериев. Свертка в МАИ является итеративным процессом по уровням иерархии. Этих уровней может быть достаточно много. Каждый уровень оценивается разными экспертами, что позволяет сравнить несравнимые физическими параметрами величины. При алгоритмизации свертки для МАИ удобен потоковый алгоритм вычисления весов критериев и альтернатив [3]. В классическом подходе МАИ оперирует аддитивной сверткой и использует метод парного сравнения для оценки элементов иерархии. Но последние публикации связаны с применением других методов оценки и сверток. Например, анализ бинарных отношений, применение глобальных критериев, мультипликативная свертка, минимаксный подход, потоковая схема распределения ресурсов. Эти методы позволяют применять МАИ для аналитического планирования, поискового морфологического синтеза, комбинаторного анализа в задачах распределения ресурсов [3].
Заложенный в МАИ потенциал довольно большой. Иерархическая модель позволяет применять МАИ для приблизительного представления предметных областей (для ЛПР), которые не имеют построенной точной математической модели. Выборка знаний из такого описания позволит применять оценки и построенную структуру для новых задач принятия решения, близких к уже решенным. Кроме того, сам процесс решения ЗПР носит итеративный характер. Задача просчитывается несколько раз с изменениями на следующих этапах части экспертных оценок, структуры критериев. Для аналитического планирования на основе МАИ итеративный процесс заложен в сам алгоритм решения [3, 5].
Хранение структурированной информации и задачи ее различной обработки становятся важными при программировании МАИ [2]. Обоснованный выбор модели базы данных позволит упростить некоторые алгоритмы.
Для обработки информации в МАИ приходится учитывать следующие факты:
критерии образуют многоуровневую иерархоподобную структуру;
каждый критерий может быть оценен различными методами;
каждый критерий будет оцениваться разными экспертами, что требует хранения вектора оценок. А для разных методов шкалирования термин вектор оценок не является адекватным, так как оценки ставятся в разных шкалах. Поэтому приходится вводить объектно-ориентированное представление для оценок и "добывать" вектор усредненных оценок полиморфными методами из инкапсулированных данных;
при выборке знаний из базы нужно выбирать все взаимосвязанные критерии, обусловленные структурой подкритериев;
для удобства оценивания элементов иерархии несколькими экспертами требуется построение распределенной системы. Поэтому вся обработка данных должна быть выполнена на основе клиент-серверной модели.
Только это приблизительное перечисление требований позволяет представить сложность программирования МАИ. Однако гибкость МАИ перевешивает всю сложность поставленной задачи.
Для реализации необходимо выбрать объектно-ориентированную базу данных, поддерживающую создание распределенных систем. Это налагает ряд требований на формат хранения данных и ее обработки.
Быстро развивающимся форматом хранения сложно структурированной информации является XML - extensible Markup Language. Этот формат позволяет добавлять новые теги и контейнеры в имеющийся документ, не нарушая его структуры. Сам формат поддерживает иерархическую модель
отношений 1 к n, и использует вложенные данные. Каждое определение в документе позволяет добавить контейнер для хранения некоторой дополнительной информации. Структура документа может описываться на специальных языках - Document Type Definition (DTD), XML Schema Definition Language (XSD), Schematron, REgular LAnguage Description for XML (Relax), Tree REgular Expression for XML (TREX), Document Definition Markup Language (DDML). Это позволяет существующими программными средствами проверить по описанию документа соответствие документа объявленной модели, то есть его правильность [6].
Формат XML документа читается непосредственно самим человеком. Это простой текстовый файл. В то же время существует огромное число разработанных программных средств для конвертации в данный формат и из данного формата в другие форматы.
Другой особенностью XML является поддержка ссылок внутри документа на другие документы и их фрагменты с помощью языков XLink и XPointer. Это позволит структурировать задачи МАИ со ссылками на решенные задачи и их фрагменты в базе данных. Доступ же к фрагментам решенных задач, то есть выборка всех взаимосвязанных критериев доступна с помощью языка XQuery.
Развернутые возможности XML ссылок позволяют формировать распределенную систему только лишь средствами самого XML. Поэтому задачу МАИ можно описать группой взаимосвязанных между собой XML файлов. Такая организация системы хранения менее трудоемка для разработки, но повышает требования к администрированию распределенной системы стандартными средствами операционной системы. Это снижает безопасность хранения данных.
Чтобы решить проблему безопасного доступа к данным, ограничим задачу рамками одного файла (одна задача требует ведения одного файла). При программном обращении и модификации файлов используем Document Object Model (DOM) объектное представление документа. При чтении файла XML информация помещается в связанные объекты в оперативной памяти и обработка данных программным обеспечением представляет собой обращение к этим объектам. После модификации объектов данные записываются на внешнее устройство вызовом лишь одной функции библиотеки DOM. Безопасность объектов решается самими объектами. Так как DOM использует объектноориентированное представление, то при доступе к объектам можно обеспечить встроенную проверку на правомочность операций. Например, принцип сохранения в каждом объекте его создателя и списка прав пользователей.
Существует множество созданных DOM анализаторов и XML парсеров. Например, IBM XML4J, Java XML Pack от Sun Microsystems (Java API for XML), MSXML (Microsoft XML Parser), Oracle XML Parser, Electric XML (от фирмы Mind Electric), Apache Xerces 2 (от Apache Software Foundation). Наконец, существуют "именные" анализаторы, созданные отдельными людьми. Наибольшую популярность получил XP XML Parser от Джеймса Кларка [6].
Для разработки распределенных систем требуется остановить свой выбор на двух конкурирующих технологиях. Это Distributed Component Object Model (DCOM) от Microsoft или Common Object Requested Broker Architecture (CORBA), поддерживаемая одноименным консорциумом. И та и другая технология позволяет использовать существующие библиотеки XML парсеров совместно с трехзвенной и многозвенной архитектурами.
Рис. 1. Иерархическое представление морфологической таблицы
Большинство из рассмотренных систем ориентировано на Java и Unix подобные операционные системы. Учитывая, что пакет MSXML построен на основе COM технологии, то есть позволяет ис-
пользовать себя без связующих звеньев напрямую в распределенной системе, остановим свой выбор на нем. Выбор обусловлен также следующими причинами:
независимость COM объектов от языка программирования. Можно использовать различные языки и системы программирования - Visual С++, Visual Basic, Java++, Delphi, Builder и т. д., а также скриптовые технологии;
продвижение Microsoft технологии NET Framework, которая расширяет множество языков программирования с использованием COM объектов (С#, JScript .NET и т. д.). Эта технология поставляется Microsoft в открытых кодах и теоретически она переносима на другие операционные системы. Кроме того, в технологию .NET Framework встроена библиотека XML парсера (пространство имен System.XML общей среды выполнения CLR), позволяющая упростить для некоторых языков обращения к DOM объектам XML;
пакет MSXML поддерживается операционной системой Windows (а, точнее, браузером, встроенным в операционную систему).
Рассмотрим примеры описания задачи МАИ на XML. Для первого варианта представим задачу морфологического синтеза. Задача в общем виде представлена следующей иерархией (рис. 1).
Корневой узел описывает систему целиком. Следующий уровень иерархии показывает подсистемы. Последний уровень описывает альтернативы. Задача в таком виде тривиальна для описания на XML:
<System>
<Subsystem1>
<A11/><A12/><A13/>
</Subsystem1>
<Subsystem2>
</Subsystem(n)>
</System>
Данный документ обрабатывается в модели MSXML DOM. При обработке формируется объектное представление документа в виде дерева. Визуальное представление объектов представлено на рис. 2. В данной структурной модели все узлы имеют только одного родителя. Таким образом, оценки связям должны быть представлены в контейнере детей.
+ X	■	©
Task	Action Delete Active Start Stop	Help
□ Tasks &■■□© Sys
I	I □
I	I □
□
E E
m Undefined run time	3/^
Рис. 2. Визуальное представление объектов
Рассмотрим более сложный случай. Для специфической иерархии, описывающей распределение нескольких видов ресурсов (рис. 3), каждый объект уровня проектов связан с n задействованными ресурсами и m критериями оценки важности этого проекта [3]. Для описания структуры средствами XML тривиальный подход невозможен.
Введем другую структуру XML объектов. Корневой элемент описывает всю систему целиком. Он содержит в себе виды уровней иерархоподобной структуры (рис. 3).
Структура представляет собой многодольный ориентированный граф, поэтому выделяются три объекта - уровень критериев, проектов и ресурсов. Следующий шаг детализации объявит конкретные объекты иерархии. Чтобы описать связи между объектами, нужно ввести список связанных элементов, например, в виде тега "Связи".
<Фокус><Критерии><Критерий1/> <Критерий2/>...<КритерийК/></Критерии> <Проекты><Проект1><Связи><Критерий1/> <Критерий2/> ...<КритерийК/><\/Связи>
<\Проект 1>... </Проекты><Ресурсы>... </Ресурсы></Фокус>
Фокус
Критерий 1		Критерий 2		Несколько критериев		Критерий k
Проекты 1	
Ресурс 1	
Рис. 3. Абстрактный вид иерархии для распределения ресурсов
При описании элемента типа "Проект" мы указываем обратные ссылки. Это позволит с помощью одного вызова метода DOM объекта "узел" MSXML и языка XPath получать список узлов, связанных с определенным критерием. Оценки связям устанавливаются в контейнере конкретной связи. Такая модель позволяет описывать МАИ с частичными, не полностью определенными связями между уровнями иерархии.
Пример использования языков XPath и XPointer для выбора списка проектов, связанных с критерием "Критерий1":
Запрос XPath:
"/Фокус/Проекты/*/Связи/Критерий 1/parent::parent:: *"
Запрос XPointer:
"xpointer(/Фокус/Проекты/*/Связи/Критерий 1/../..)"
Язык XPath позволяет вычислять и более сложные выражения. Например, произвести вычисления на основе структуры XML документа и хранимых данных. Все это позволяет упростить алгоритмы хранения и обработки информации в МАИ.
БИБЛИОГРАФИЧЕСКИМ СПИСОК
1. Андрейчиков, А. В. Анализ, синтез, планирование решений в экономике / А. В. Андрейчиков, О. Н. Андрейчикова. -М.: Финансы и статистика, 2000. - 368 с.: ил.
2.	Андрейчиков, А. В. Машинное представление сетевой информации / А. В. Андрейчиков, М. А. Кузнецов // Концептуальное проектирование в образовании, технике и технологии: сб. научн. тр. - Волгоград: ВолгГТУ, 1998. - С. 144-149.
3.	Андрейчиков, А. В. Математические модели и средства аналитического планирования на основе метода анализа иерархии: монография / А. В. Андрейчиков, М. А. Кузнецов, О. Н. Андрейчикова. - Волгоград, 2004. - 224 с.
4.	Саати, Т. Принятие решений. Метод анализа иерархий / Пер. с англ. - М.: Радио и связь, 1993. - 320 с.
5.	Саати, Т. Аналитическое планирование. Организация систем / Т. Саати, К. Кернс / Пер. с англ. - М.: Радио и связь, 1991. - 224 с.
6.	Хабибуллин, И. Ш. ХМЬ. Теория и практика создания ХМЬ документов. - СПб.: БХВ-Петербург, 2003. - 336 с.: ил.