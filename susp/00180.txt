

	 ПРАВИЛА ПРОГРАММИРОВАНИЯ.
	 

 
Вымышленная биография

Версии биографии Гродда различаются в зависимости от автора. Впервые его история была изложена в 1977 году в DC Superstars № 14: согласно ей, он происходил из расы интеллектуальных приматов с планеты Калор, решивших загипнотизировать Зелёного Фонаря, чтобы сбежать со своей родной опасной планеты на Землю, и в полёте объявившим себя правителем горилл, желая свергнуть законного правителя Соловара, что ему сделать не удалось. Первая встреча Гродда с Флэшем произошла, когда Соловар, в комиксе 1959 года ещё не король, а учёный, покинул разумных горилл, чтобы посмотреть на жизнь человечества, но был пойман людьми, вследствие чего притворился обычной гориллой. Гродд отправился на его поиски, но не с целью освободить, а с целью выведать секрет контроля разума других существ, с помощью которого он собирался захватить власть над разумными гориллами и всей Землёй. Однако сбежавший от людей Соловар обратился за помощью к супергерою Флэшу и совместно с ним победил Гродда, после чего последний стал одним из главных врагов Флэша. После «Кризиса на Бесконечных Землях» история Гродда была изменена: он, как и его соплеменники, был обычной гориллой, жившей в джунглях Африки, до тех пор пока там не потерпел крушение инопланетный корабль, пилот которого наделил горилл разумом, намного превосходящим человеческий, а двух горилл, Гродда и Соловара, — также телепатическими способностями. Правила вывода ИВVI. Правила учета пенсионных делА.Открытая травма. Первая помощь при ранах. Правила наложения кровоостанавливающего жгута и основы десмургии.АНАЛИТИЧЕСКИЕ ВЕСЫ. ПРАВИЛА ОБРАЩЕНИЯ С НИМИБД, основанные на правилах.Бизнес-правилаВиды валютных операций и основные правила их проведенияВиды вскармливания. Грудное вскармливание (преимущества, механизм образования молока, правила кормления грудью).Виды динамических рядов и правила их построения.Виды и правила индукции.






С приобретением опыта программист вырабатывает собственные правила и стиль. При этом совершенно не обязательно наступать на все грабли самому. Разумное следование приведенным ниже рекомендациям поможет избежать многих распространенных ошибок. Конечно, на все случаи жизни советы дать невозможно, ведь не зря многие считают программирование искусством.
 Главная цель, к которой нужно стремиться, — получить легко читаемую программу, возможно, более простой структуры. В конечном счете, все технологии программирования направлены на достижение именно этой цели, поскольку только так можно добиться надежности программы и легкости ее модификации.
 Такие появления божественных Существ происходили, как мы видели, и в языческих Мистериях, и в церковных Мистериях были такие же светлые появления.
 · Каждое законченное действие оформляется в виде подпрограммы.. Размер подпрограммы может быть разным, это зависит от конкретного действия, но желательно, чтобы ее тело помещалось на один-два экрана: одинаково сложно разбираться в программе, содержащей несколько необъятных функций, и в россыпи из сотен подпрограмм по несколько строк каждая. Если какая-либо последовательность операторов используется хотя бы дважды, ее также нужно оформить в виде подпрограммы.
 · Все величины, которыми подпрограмма обменивается с вызывающей программой, должны передаваться ей через параметры. Входные параметры предпочтительнее передавать как константы. Обычно в списке параметров сначала записывают все входные параметры, а затем — все выходные. Если подпрограмма возвращает одно значение, лучше оформить ее в виде функции, если несколько — в виде процедуры.
 · В подпрограмме полезно предусматривать реакцию на неверные входные параметры и аварийное завершение. Это может быть или печать сообщения, или, что более предпочтительно, формирование признака результата. Этот признак необходимо анализировать в вызывающей программе. Сообщение об ошибке должно быть информативным и подсказывать пользователю, как ее исправить. Например, при вводе неверного значения в сообщении должен быть указан допустимый диапазон.

 · Величины, используемые только в подпрограмме, следует описывать внутри нее как локальные переменные. Это упрощает отладку программы. Использовать глобальные переменные в подпрограммах нежелательно, потому что их изменение трудно отследить.
 10 страницаSans doute, pensai-je, elle n'ose pas, en public. C'est dans une heure, dans un instant, qu'elle le donnera. Правильно выбранные имена могут сделать программу в некоторой степени самодокументированной. Неудачные имена, наоборот, служат источником проблем. Сокращения ухудшают читаемость, и часто можно забыть, как именно было сокращено то или иное слово. Общая тенденция состоит в том, что чем больше область видимости переменной, тем более длинное у нее имя. Перед таким именем можно поставить префикс типа (одну или несколько букв, по которым можно определить тип переменной). Для счетчиков коротких циклов, напротив, лучше обойтись однобуквенными именами типа i или k.
 · Следует избегать использования в программе чисел в явном виде. Константы должны иметь осмысленные имена, заданные в разделе описания const. Символическое имя делает программу более понятной, а, кроме того, при необходимости изменить значение константы потребуется изменить программу только в одном месте. Конечно, этот совет не относится к константам 0 и 1.
 · Для записи каждого фрагмента алгоритма необходимо использовать наиболее подходящие средства языка. Например, ветвление на несколько направлений по значению целой переменной более красиво записывается с помощью оператора case, а не нескольких if. Для просмотра массива лучше пользоваться циклом for. Оператор goto применяют весьма редко, например. для принудительного выхода из нескольких вложенных циклов, а в большинстве других ситуаций лучше использовать другие средства языка, такие как процедуры break или exit.
 · Программа должна быть «прозрачна». Если какое-либо действие можно запрограммировать разными способами, то предпочтение должно отдаваться не наиболее компактному и даже не наиболее эффективному, а такому, который легче для понимания. Особенно это важно тогда, когда пишут программу одни, а сопровождают другие, что является широко распространенной практикой. «Непрозрачное» программирование может повлечь огромные затраты на поиск ошибок при отладке.
 · Не следует размещать в одной строке много операторов. Как и в русском языке, после знаков препинания должны использоваться пробелы:
 · Вложенные блоки должны иметь отступ в 3-4 символа, причем блоки одного уровня вложенности должны быть выровнены по вертикали. Форматируйте текст по столбцам везде, где это возможно.
 · Помечайте конец длинного составного оператора.

    
        Загрузка...
    
    

 · Для организации циклов пользуйтесь наиболее подходящим оператором. Цикл repeat применяется только в тех случаях, когда тело непременно потребуется выполнить хотя бы один раз, например при проверке ввода. Цикл for используется, если число повторений известно заранее и параметр имеет порядковый тип, цикл while — во всех остальных случаях. При записи итерационных циклов (в которых для проверки условия выхода используются соотношения переменных, формируемых в теле цикла) необходимо предусматривать аварийный выход по достижении заранее заданного максимального количества итераций. Чтобы цикл легче читался, надо стремиться объединять инициализацию, проверку условия выхода и приращение в одном месте.
 Несколько советов по записи операторов ветвления:
 · Более короткую ветвь if лучше поместить сверху, иначе вся управляющая структура может не поместиться на экране, что затруднит отладку.
 · Бессмысленно использовать проверку на равенство true или false.
 · Следует избегать лишних проверок условий. 
 · Если первая ветвь оператора if содержит передачу управления, использовать else нет необходимости:
 if i > 0 then exit; { здесь i <= 0 }
 · Необходимо предусматривать печать сообщений в тех точках программы, куда управление при нормальной работе программы передаваться не должно. 
  



НИСХОДЯЩЕЕ ТЕСТИРОВАНИЕ.  | следующая ==> ДОКУМЕНТИРОВАНИЕ ПРОГРАММЫ.
Дата добавления: 2014-02-13; просмотров: 39; Опубликованный материал нарушает авторские права?.

Не нашли то, что искали? Воспользуйтесь поиском:
Не хотите "париться"? Роль государства не уменьшается, - через сотрудничество с субъектами политики государство обеспечивает условия для эффективного международного управления. В многочисленных публикациях западных ученых «глобализация рассматривается как процесс, в ходе которого большая часть социальной активности приобретает мировой характер, как определяющий исторический феномен нашего времени, изменяющий характер и результаты деятельности общества.